
/*
// 创建 Webview 面板
const panel = vscode.window.createWebviewPanel(
    'myWebview', // 面板 ID
    'My Webview', // 面板标题
    vscode.ViewColumn.One, // 显示位置
    { enableScripts: true } // 启用 JavaScript
);
// 在 Webview 中加载 HTML 页面
panel.webview.html = getWebviewContent();;
// 监听 Webview 发送的消息
panel.webview.onDidReceiveMessage(message => {
    if (message.type === 'buttonClick') {
        // 在 VS Code 中显示提示框
        vscode.window.showInformationMessage('Button clicked in Webview!');
    }
});
// 在 VS Code 中注册命令
let disposable = vscode.commands.registerCommand('webview.helloWorld', () => {
    // 向 Webview 发送消息
    panel.webview.postMessage({ type: 'showButton' });
});
context.subscriptions.push(disposable);
}
function getWebviewContent() {
return `
<html>
  <body>
    <button id="myButton">Click me</button>
    <script>
      const vscode = acquireVsCodeApi();
      const myButton = document.getElementById('myButton');
      myButton.addEventListener('click', () => {
        vscode.postMessage({ type: 'buttonClick' });
      });
    </script>
  </body>
</html>
`;
**/

/*
废案，调用python来请求
 
async function pygpt() {
    const { exec } = require('child_process');

    // eslint-disable-next-line no-unused-vars
    exec('python C://0.py', (error, stdout, stderr) => {
        if (error) {
            console.error(`执行出错: ${error}`);
            return;
        }
        console.log(`stdout: ${stdout}`);
    });

}
**/

/*
废案，直接请求
 
let disposable = vscode.commands.registerCommand('extension.chatGPT', async function () {
    // const apiURL = "https://api.openai.com/v1/completions";
    const apiURL = "https://api.xty.app";
    const apiKey = "sk-jeH8bowTE1jG27y70cBe7205Fb694447A349703632Ea3b3c";
    const promptText = "Hello, world!";
    try {
        const response = await axios.post(apiURL, {
            model: "gpt-3.5-turbo",
            prompt: promptText,
            temperature: 0.7,
            max_tokens: 150,
        }, {
            headers: {
                Authorization: `Bearer ${apiKey}`
            }
        },
        );
        vscode.window.showInformationMessage(response.data.choices[0].text);
    } catch (error) {
        console.error("出现一个错误:", error);
        vscode.window.showErrorMessage("出现一个错误1" + String(error));
    }
});

 
context.subscriptions.push(disposable);
**/